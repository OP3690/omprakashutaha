{"ast":null,"code":"var _jsxFileName = \"/Users/omprakashutaha/Desktop/OmprakashUtaha/src/styles/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { theme } from './theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Check for saved theme preference or default to light mode\n    const saved = localStorage.getItem('theme');\n    if (saved) {\n      return saved === 'dark';\n    }\n    // Check system preference\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  useEffect(() => {\n    // Save theme preference\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n\n    // Update document class for global styling\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n\n  // Create theme object based on current mode\n  const currentTheme = {\n    ...theme,\n    isDarkMode,\n    colors: {\n      ...theme.colors,\n      background: isDarkMode ? theme.colors.dark.background : theme.colors.light.background,\n      text: isDarkMode ? theme.colors.dark.text : theme.colors.light.text,\n      border: isDarkMode ? theme.colors.dark.border : theme.colors.light.border\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledThemeProvider, {\n      theme: currentTheme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"dzl/1zP6PK7XdqsPFNqqvjlYcjc=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ThemeProvider","StyledThemeProvider","theme","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","children","_s2","isDarkMode","setIsDarkMode","saved","localStorage","getItem","window","matchMedia","matches","toggleTheme","prev","setItem","document","documentElement","classList","toggle","currentTheme","colors","background","dark","light","text","border","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omprakashutaha/Desktop/OmprakashUtaha/src/styles/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { theme } from './theme';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Check for saved theme preference or default to light mode\n    const saved = localStorage.getItem('theme');\n    if (saved) {\n      return saved === 'dark';\n    }\n    // Check system preference\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  useEffect(() => {\n    // Save theme preference\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n    \n    // Update document class for global styling\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n\n  // Create theme object based on current mode\n  const currentTheme = {\n    ...theme,\n    isDarkMode,\n    colors: {\n      ...theme.colors,\n      background: isDarkMode ? theme.colors.dark.background : theme.colors.light.background,\n      text: isDarkMode ? theme.colors.dark.text : theme.colors.light.text,\n      border: isDarkMode ? theme.colors.dark.border : theme.colors.light.border,\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      <StyledThemeProvider theme={currentTheme}>\n        {children}\n      </StyledThemeProvider>\n    </ThemeContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,aAAa,IAAIC,mBAAmB,QAAQ,mBAAmB;AACxE,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,gBAAGT,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMU,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGX,UAAU,CAACQ,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMN,aAAa,GAAGA,CAAC;EAAEU;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,MAAM;IACjD;IACA,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,OAAOA,KAAK,KAAK,MAAM;IACzB;IACA;IACA,OAAOG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAClE,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBP,aAAa,CAACQ,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd;IACAgB,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEV,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;;IAE5D;IACAW,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEd,UAAU,CAAC;EAC/D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMe,YAAY,GAAG;IACnB,GAAGzB,KAAK;IACRU,UAAU;IACVgB,MAAM,EAAE;MACN,GAAG1B,KAAK,CAAC0B,MAAM;MACfC,UAAU,EAAEjB,UAAU,GAAGV,KAAK,CAAC0B,MAAM,CAACE,IAAI,CAACD,UAAU,GAAG3B,KAAK,CAAC0B,MAAM,CAACG,KAAK,CAACF,UAAU;MACrFG,IAAI,EAAEpB,UAAU,GAAGV,KAAK,CAAC0B,MAAM,CAACE,IAAI,CAACE,IAAI,GAAG9B,KAAK,CAAC0B,MAAM,CAACG,KAAK,CAACC,IAAI;MACnEC,MAAM,EAAErB,UAAU,GAAGV,KAAK,CAAC0B,MAAM,CAACE,IAAI,CAACG,MAAM,GAAG/B,KAAK,CAAC0B,MAAM,CAACG,KAAK,CAACE;IACrE;EACF,CAAC;EAED,oBACE7B,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,UAAU;MAAEQ;IAAY,CAAE;IAAAV,QAAA,eACxDN,OAAA,CAACH,mBAAmB;MAACC,KAAK,EAAEyB,YAAa;MAAAjB,QAAA,EACtCA;IAAQ;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE5B,CAAC;AAAC5B,GAAA,CA1CWX,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}